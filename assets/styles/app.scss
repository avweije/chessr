// Include custom functions, variables, and theme settings
@use "functions" as fn;
@use "variables";

// Import bulma so we an merge variables
//@use "../vendor/bulma-1.0.4/sass" as bulma;

// Import sass map module for merging maps
@use "sass:map";

// Bulma's default $colors variable
$bulma-colors: (
    "white": (
      variables.$white,
      variables.$black,
    ),
    "black": (
      variables.$black,
      variables.$white,
    ),
    "light": (
      variables.$light,
      variables.$dark,
    ),
    "dark": (
      variables.$dark,
      variables.$light,
    ),
    "text": variables.$text-default,
    "primary": variables.$primary,
    "link": variables.$link,
    "info": variables.$info,
    "success": variables.$success,
    "warning": variables.$warning,
    "danger": variables.$danger,
);

// Extend bulma colors with custom variables
$custom-colors: map.merge($bulma-colors, (
    "link-border": variables.$link-text-border,
    "surface-alt": variables.$surface-alt,
    "default": variables.$text-default,
    "title": variables.$text-title,
    "faded": variables.$text-faded,
    "on-background": variables.$text-on-background
  )
);

// Bulma with overridden variables
@use "../vendor/bulma-1.0.4/sass" with (
  // Defaults, regardless of theme
  $family-primary: '"Nunito", sans-serif',
  //$grey-dark: $brown,
  //$grey-light: $beige-light,
  $control-border-width: 2px,

  $primary: variables.$primary,
  $link: variables.$link,
  $info: variables.$info,
  $success: variables.$success,
  $warning: variables.$warning,
  $danger: variables.$danger,

  $text: variables.$text-default,
  $title-color: variables.$text-title,

  $input-disabled-color: variables.$text-default-dark,

  $colors: $custom-colors,

  $background: variables.$background,
  $scheme-main: variables.$surface-main,
  $scheme-invert: variables.$text-on-background
);

// Import theme now, to override bulma --vars
@use "theme";

// Bulma custom and overrides, grid
@use "./bulma-custom.scss" as *;
@use "./components.scss" as *;
@use "./grid.scss" as *;
@use "./loaders.scss" as *;
@use "./notyf.scss" as *;


/* light/dark theme toggle */

html, html.theme-light {
  color-scheme: light;
}

html.dark, html.theme-dark {
  color-scheme: dark;
}

html {
  overflow-y: visible;
}

body {
  min-height: 100vh;
  min-width: min-content;
  width: 100vw;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overflow-y: scroll;
}

.dark body {
  /* background-color: #18181b; */ /* dark:bg-slate-800 */
  /* color: #d1d5db; */ /* dark:text-slate-300 */
}

.body-background {
  position: fixed;
  z-index: -1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--bg-image) no-repeat center center fixed;
  background-size: cover;
  filter: brightness(0.5);
}

.dark .body-background {
  filter: brightness(0.25);
}


/* Secondary link class */
.link-secondary {
  cursor: pointer;
  color: var(--color-link)
}

.link-secondary:hover {
  color: var(--color-link-hover);
}


/* logo */
img.logo {
  height: 32px;
  width: auto;
}

/* fixed page header, contains navbar */
.page-header {
  /* fixed z-20 top-0 start-0 w-full */
  position: fixed;
  z-index: 20;
  top: 0;
  left: 0;
  width: 100%;
}

nav.nav-bar {
  /* relative page-width py-1 md:py-2 bg-tacao-100 dark:bg-slate-900 rounded-sm border border-tacao-200 dark:border-slate-700 flex rounded is-flex-wrap-wrapitems-center is-justify-content-space-between shadow-dark-mild */
  position: relative;
  width: 100%;
  height: 3rem;
  padding: 0;
  background-color: var(--color-surface-main);
  border-radius: 0.125rem;  /* rounded-sm */
  border: 1px solid #fde68a;
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  justify-content: space-between;
  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.05);
  /* If you want dark mode, use a JS class toggle or prefers-color-scheme media query */
  /* background-color: #18181b;  dark:bg-slate-900 */
}

.dark nav.nav-bar {
  background-color: #18181b; /* dark:bg-slate-900 */
  border-color: #27272a; /* dark:border-slate-700 */
}

nav.nav-bar .navbar-hover-menu {
  display: flex;
  align-items: stretch;
}

nav.nav-bar .navbar-hover-menu > * {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color ease-out 0.3s;
}

nav.nav-bar .navbar-hover-menu > .is-icon {
  width: 2.8rem;
  font-size: 1.2rem;
}

//nav.nav-bar .navbar-hover-menu > *:not(:first-child) {
nav.nav-bar .navbar-hover-menu > * {
  //border-left: solid 1px var(--color-surface-alt);
  //border-left: solid 1px rgba(255,255,255,.05);
}

nav.nav-bar .navbar-hover-menu > *:not(:last-child)::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 1px;
  pointer-events: none;
  background: linear-gradient(
    to bottom,
    transparent 10%,
    rgba(0,0,0,0.1) 50%,
    transparent 90%
  );
}

.dark nav.nav-bar .navbar-hover-menu > *:not(:last-child)::after {
  background: linear-gradient(
    to bottom,
    transparent 10%,
    rgba(255,255,255,0.10) 50%,
    transparent 90%
  );
}

nav.nav-bar .navbar-hover-menu > *:last-child {
  //border-right: solid 1px var(--color-surface-alt);
}

nav.nav-bar .navbar-hover-menu > *:not(:last-child) {
  //border-right: solid 1px rgba(255,255,255,.05);
}

nav.nav-bar .navbar-hover-menu > *:hover {
  background-color: var(--color-surface-alt);
}


/* main content div, default padding */
.main-content {
  padding: 1.25rem;
  padding-top: calc(50px + 1.25rem); /* account for fixed header */
  min-width: 100%;
  min-height: 100vh;
}

/* full width minus (fixed) vertical scrollbar */
.page-width {
  width: calc(100vw - 10px);
}

.cursor-pointer {
  cursor: pointer;
}

.pointer-events-auto {
  pointer-events: auto;
}

/* accuracy colors */
.accuracy-red,
.accuracy-red-hover {
  color: var(--color-danger);
}
.accuracy-red-hover:hover {
  color: var(--color-danger-lighter);
}
.accuracy-orange,
.accuracy-orange-hover {
  color: var(--color-warning);
}
.accuracy-orange-hover:hover {
  color: var(--color-warning-lighter);
}
.accuracy-green,
.accuracy-green-hover {
  color: var(--color-success);
}
.accuracy-green-hover:hover {
  color: var(--color-success-lighter);
}


/* inputs */

input[type="search"] {
  -webkit-appearance: searchfield;
}
input[type="search"]::-webkit-calendar-picker-indicator {
  -webkit-appearance: none;
  cursor: pointer;
  color: #fbbf24;
  font-size: 1.25rem;
}
input[type="search"]::-webkit-search-cancel-button {
  -webkit-appearance: none;
  cursor: pointer;
  color: #fbbf24;
  font-size: 1.25rem;
}


/* links */

a,
.a-link {
  font-weight: 600;
  cursor: pointer;
}

/* pulse skeleton loading effect */
.pulse-skeleton {
  position: relative;
  color: transparent !important;
  background-color: transparent !important;
}

.pulse-skeleton::before {
  content: '';
  display: block;
  position: absolute;
  top: 2px;
  bottom: 2px;
  left: 0;
  right: 0;
  border-radius: 9999px;
  background-color: #fbd38d;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

.input-text-small {
  padding: 0.5rem;
}
.input-text-faded {
  background-color: #fef6e4;
}
.input-text-faded:focus {
  background-color: #fff;
}

/* fade in/out effect */
.fade-element {
  opacity: 1;
  transition: opacity 0.5s ease-in;
}
.fade-element.fade {
  opacity: 0;
}


/* Input list, remove the browser down arrow */
input[list]::-webkit-calendar-picker-indicator {
  display: none !important;
}


/* custom scrollbars */
::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}
::-webkit-scrollbar-track {
  background-color: var(--color-background);
}
::-webkit-scrollbar-thumb {
  background-color: var(--color-surface-main);
}
::-webkit-scrollbar-thumb:hover {
  background-color: var(--color-surface-alt);
}