/* Checkbox Switch - Toggles Icon/Button */
.checkbox-switch {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.checkbox-switch input[type="checkbox"] {
  display: none;
}

.checkbox-switch label {
  cursor: pointer;
}

.checkbox-switch input[type="checkbox"]:checked ~ label > .checkbox-switch-on,
.checkbox-switch input[type="checkbox"]:not(:checked) ~ label > .checkbox-switch-off {
  display: block;
}

.checkbox-switch input[type="checkbox"]:not(:checked) ~ label > .checkbox-switch-on,
.checkbox-switch input[type="checkbox"]:checked ~ label > .checkbox-switch-off {
  display: none;
}


/* button with icon that changes on hover */
.button-icon-hover > span.icon {
  color: var(--bulma-link-color);
  transition: all 0.5s;
}

.button-icon-hover:hover > span.icon {
  color: var(--bulma-link-hover-color);
}

.button-icon-hover > span.icon:first-child,
.button-icon-hover:hover > span.icon:last-child {
  opacity: 1;
  display: inline-block;
}

.button-icon-hover > span.icon:last-child,
.button-icon-hover:hover > span.icon:first-child {
  opacity: 0;
  display: none;
}


/* Maybe make this a see-through button? */
.goto-first-btn {
    flex-shrink: 0;
    width: 1.75rem;
    height: 1.75rem;
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
    margin-left: 0.5rem;
    margin-right: 0.25rem;
    background: none;
    border: none;
    cursor: pointer;
    font-size: 1rem;
}


/* Toggle Switch */
.toggle {
  display: inline-flex;
  flex-wrap: nowrap;
  align-items: center;
  cursor: pointer;
}

.toggle > input[type="checkbox"] {
  display: none;
}

.toggle > .knob {
  position: relative;
  display: inline-flex;
  flex-shrink: 0;
  align-items: center;
  width: var(--toggle-width);
  height: var(--toggle-height);
  background-color: #aaa;
  border-radius: 9999px;
  border: solid 1px rgba(0,0,0,.1);
  transition: background-color 0.3s ease;

  --toggle-width: 3rem;
  --toggle-height: 1.6rem;
}

.toggle > input:focus ~ .knob {
  /* box-shadow: 0 0 0 2px #b45309; */
}

.toggle > input:checked ~ .knob {
  background-color: var(--color-link);
}

/* knob (circle) */
.toggle > .knob::after {
  content: "";
  position: absolute;
  left: var(--knob-margin);
  width: calc(var(--toggle-height) - var(--knob-margin) * 2);
  height: calc(var(--toggle-height) - var(--knob-margin) * 2);
  background-color: #fff;
  border-radius: 50%;
  transition: transform 0.3s ease; /* smooth sliding */

  --knob-margin: 0.2rem;
}

/* when checked, slide knob to the right */
.toggle > input:checked ~ .knob::after {
  transform: translateX(calc(var(--toggle-width) - var(--toggle-height)));
}

/* toggle label */
.toggle > .toggle-label {
  font-size: .95em;
  font-weight: 600;
  margin-left: 0.9rem;
}


/* boxed link */
.boxed-link {
  display: flex;
  align-items: center;
  padding: 0.5rem 0.5rem;
  font-weight: 500;
  color: #3b82f6;
  border-radius: 0.5rem;
  border: 1px solid #d4d4d8;
}
.boxed-link:hover {
  background-color: #eff6ff;
  border-color: #bfdbfe;
}
.boxed-link span:first-child {
  white-space: nowrap;
  padding: 0.5rem;
}
.boxed-link span:last-child {
  font-size: 2rem;
  margin: 0.5rem;
}


/* boxed radio menu */
.boxed-radio-menu {
  display: inline-flex;
  justify-content: center;
  overflow: hidden;
  border-radius: 0.5rem;
  background-color: var(--color-surface-main);
  border: 1px solid var(--color-surface-border);
}

.boxed-radio-menu.hidden {
  display: none;
}

.boxed-radio-menu > .boxed-radio {
  color: var(--color-text-faded);
}
.boxed-radio-menu > .boxed-radio {
  min-width: 7rem;
}
div:not(.boxed-radio-menu) > .boxed-radio {
  min-width: 9rem;
  border-radius: 0.5rem;
  padding: 1rem 1rem;
}
.boxed-radio-menu > .boxed-radio {
  font-size: 0.875rem;
  padding: 0.75rem 0.75rem;
}

.boxed-radio-menu .boxed-radio {
  font-size: 0.875rem;
}

.boxed-radio-menu .boxed-radio .boxed-radio-label {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.boxed-radio-menu .boxed-radio:not(:first-of-type) .boxed-radio-label {
  border-left: 1px solid var(--color-surface-main);
}

.boxed-radio-menu .boxed-radio:not(:last-of-type) .boxed-radio-label {
  border-right: 1px solid var(--color-surface-main);
}

.boxed-radio-menu .boxed-radio input:not(:disabled):not(:checked) ~ .boxed-radio-label:hover {
  background-color: var(--color-surface-alt);
  border-color: var(--color-surface-alt);
}

.boxed-radio-menu .boxed-radio input:not(:disabled):not(:checked) ~ .boxed-radio-label:hover ~ .boxed-radio-text {
  color: var(--color-text-default);
}


/* boxed radio/checkbox groups */
.boxed-radio-group,
.boxed-checkbox-group {
  display: flex;
  flex-wrap: wrap;
  gap: 0.25rem;
  justify-content: center;
}

.boxed-radio,
.boxed-checkbox {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--color-surface-main);
  padding: 1rem;
  font-weight: 500;
  border-radius: 0.5rem;
  color: #374151;
}

.boxed-radio.hidden,
.boxed-checkbox.hidden {
  display: none;
}

.boxed-radio,
.boxed-checkbox {
  font-size: 1rem;
}

div:not(.boxed-radio-menu) > .boxed-radio .boxed-radio-label,
.boxed-checkbox .boxed-checkbox-label {
  position: absolute;
  top: 0;
  height: 100%;
  width: 100%;
  cursor: pointer;
  border-radius: 0.5rem;
  border: 1px solid var(--color-surface-alt);
}

.boxed-radio-menu > .boxed-radio input:not(:disabled):checked ~ .boxed-radio-label {
  background-color: var(--color-surface-alt);
  border-color: var(--color-surface-border);
}

div:not(.boxed-radio-menu) > .boxed-radio input:not(:disabled):checked ~ .boxed-radio-label,
.boxed-checkbox input:not(:disabled):checked ~ .boxed-checkbox-label {
  background-color: var(--color-surface-alt);
  border-color: var(--color-surface-border);
}

div:not(.boxed-radio-menu) > .boxed-radio input:not(:disabled):checked ~ .boxed-radio-circle {
  border-color: transparent;
  outline: solid 2px var(--color-link);
  outline-offset: 2px;
  background-color: var(--color-link);
  /* box-shadow: 0 0 0 2px #0369a1; */
}

.boxed-radio .boxed-radio-circle {
  pointer-events: none;
  z-index: 10;
  height: 1rem;
  width: 1rem;
  flex-shrink: 0;
  border-radius: 9999px;
  border: 2px solid #777;
  background-color: #aaa;
  /* box-shadow: 0 0 0 2px #0369a1; */
}


/* Boxed Checkbox */
.boxed-checkbox .boxed-checkbox-circle {
  pointer-events: none;
  z-index: 10;
  height: 1.3rem;
  width: 1.3rem;
  border: solid 2px var(--color-surface-alt);
  border-radius: 9999px;
}

/* checkbox checkmark */
.boxed-checkbox .boxed-checkbox-checkmark {
    display: flex;
    align-items: center;
    flex-shrink: 0;
    width: 1.3rem;
    height: 1.3rem;
    font-size: 1.25rem;
    z-index: 10;
    color: var(--color-link);
}

/* toggle circle/checkmark */
.boxed-checkbox input:not(:disabled):checked ~ .boxed-checkbox-checkmark,
.boxed-checkbox input:not(:disabled):not(:checked) ~ .boxed-checkbox-circle {
    display: flex;
}

.boxed-checkbox input:not(:disabled):not(:checked) ~ .boxed-checkbox-checkmark,
.boxed-checkbox input:not(:disabled):checked ~ .boxed-checkbox-circle {
    display: none;
}


/* boxed radio/checkbox text */
.boxed-radio .boxed-radio-text,
.boxed-checkbox .boxed-checkbox-text {
  color: var(--color-text-faded);
  pointer-events: none;
  z-index: 10;
  white-space: nowrap;
  text-align: center;
  padding-left: 1rem;
  padding-right: 1rem;
  flex-grow: 1;
}

.boxed-radio input:not(:disabled):checked ~ .boxed-radio-text,
.boxed-checkbox input:not(:disabled):checked ~ .boxed-checkbox-text {
  color: var(--color-text-default);
}


/* boxed card - homepage? */
.boxed-card {
  position: relative;
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  cursor: pointer;
  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.05);
  border-radius: 0.5rem;
  margin: 0 !important;
  padding-left: 1rem;
  padding-right: 1.5rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  /* background-color: #fef6e4; */
  border: 1px solid var(--color-surface-alt);
  transition: background-color 0.3s ease;
}

.boxed-card:hover {
  background-color: var(--color-surface-alt);
}


/* Pgn Moves Container */
.pgn-moves-container {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  text-align: left;
}

.pgn-moves-container .pgn-move-group {
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
}

.pgn-moves-container .pgn-move-group > .pgn-text:last-child {
  /* padding-right: 0.25em; */
}

.pgn-moves-container .pgn-text + .pgn-text {
  /* padding-left: 0.25em; */
}

.pgn-moves-container .pgn-text,
.pgn-moves-container .pgn-move {
  padding: 0.125em;
  border-radius: 0.375em;
  border: 1px solid transparent;
}

.pgn-moves-container .pgn-text.move-number {
  padding-right: 0 !important;
}

.pgn-moves-container .pgn-move-group > .pgn-move,
.pgn-moves-container .is-variation.pgn-move {
  cursor: pointer;
}

.pgn-moves-container .pgn-move.current-move {
  color: var(--color-link);
  background: var(--color-link-light);
  border: 1px solid rgba(0,0,0,.2);
}

.pgn-moves-container .pgn-move-group > .pgn-move:not(.current-move):hover,
.pgn-moves-container .is-variation.pgn-move:not(.current-move):hover {
  color: var(--color-link);
  background: var(--color-link-light);
  border: 1px solid rgba(0,0,0,.1);
}

.pgn-moves-container .pgn-move.variation,
.pgn-moves-container .is-variation {
  color: var(--color-text-faded);
  font-style: italic;
  font-size: .9em;
}

.pgn-moves-container .is-variation + .pgn-move-group {
  padding-left: 0.25em;
}


/* Table Border Spacing */
table.is-spacing-1 {
  border-collapse: separate;
  border-spacing: .25rem;
}


/* Skeleton that fills Container */
.skeleton-container {
  position: relative;
}

.skeleton-container > .skeleton-block.skeleton-full,
.skeleton-block.skeleton-full {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  min-height: 100%;
  max-height: 100%;
}

.skeleton-container > .skeleton-block.skeleton-full ~ *,
.skeleton-block.skeleton-full ~ * {
  visibility: hidden;
}

/* Custom Skeleton Elements */
.skeleton-block.skeleton-single-line {
  width: 9rem;
  height: 1.7rem;
  min-height: 1.7rem;
  max-height: 1.7rem;
  margin: 0 !important;
  border-radius: 0.25rem;
}

.skeleton-block.skeleton-single-line.is-full {
  width: 100%;
}


/* Input Range Container, Labels Above */
.range-container-text-above,
.range-container-text-below {
  position: relative;
  display: flex;
  flex-shrink: 0;
}

.range-container-text-above > .range-text,
.range-container-text-below > .range-text {
  position: absolute;
  top: -1.6rem;
  left: 0;
  right: 0;
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  pointer-events: none;
}

.range-container-text-below > .range-text {
  top: 0.9rem;
}

.range-container-text-above > input[type="range"] {
  width: 12rem;
}

/* Input Range - Track & Thumb */

// Define a mixin for styling the track
@mixin track($bg-color, $height: 8px) {
  background: $bg-color;
  height: $height;
  border-radius: calc($height / 2);
  border: none;
  box-shadow: none;
  cursor: pointer;
}

// Define a mixin for styling the thumb
@mixin thumb($bg-color, $size: 16px) {
  background: $bg-color;
  width: $size;
  height: $size;
  border-radius: 50%;
  border: none;
  cursor: pointer;
  -webkit-appearance: none;
  appearance: none;
}

// Apply the mixins to the range input
input[type="range"] {
  -webkit-appearance: none;
  appearance: none;
  background: transparent;

  &::-webkit-slider-runnable-track {
    @include track(#bbb);
  }

  &::-webkit-slider-thumb {
    @include thumb(var(--color-link));
    margin-top: -4px; // Adjust to align thumb with track
  }

  &::-moz-range-track {
    @include track(#bbb);
  }

  &::-moz-range-thumb {
    @include thumb(var(--color-link));
  }

  &::-ms-track {
    @include track(#bbb);
    border-color: transparent;
    color: transparent;
    background: transparent;
  }

  &::-ms-thumb {
    @include thumb(var(--color-link));
  }
}
